.data
	n_nat: .asciz "Entrada invalida.\n"
	sim: .asciz "sim\n"
	nao: .asciz "nao\n"

.text
main:
	li a7, 5		#lê inteiro 
	ecall
	
	add a1, a0, zero 	#guarda o inteiro em a1
	
	blez a1, naoNatural 	#verifica se a1 é natural, maior que 0
	
	addi t3, zero, 1	#compara se o número é igual a 1
	beq a1, t3, nPrimo
	
	addi t0, zero, 2	#inicializa variavel de contagem i = 2
	loop:
		mul t1, t0, t0		#faz o produto i * i
		blt a1, t1, Primo	#compara se o número é menor ou igual a i²
		rem t2, a1, t0		# faz o resto da divisão entre a1 e i e guarda em t2
		beqz t2, nPrimo		#verifica se o resto da divisão é igual a zero
		addi t0, t0, 1		#incrementa i
		j loop			#reinicia o loop
	
	Primo:
		la a0, sim
		li a7, 4
		ecall
		j done
	
	nPrimo:
		la a0, nao
		li a7, 4
		ecall
		j done
	
	naoNatural:
		la a0, n_nat
		li a7, 4
		ecall
		j done
	
	done:
		li a7, 10
		ecall